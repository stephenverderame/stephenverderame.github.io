<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>compilers on</title><link>https://stephenverderame.github.io/tags/compilers/</link><description>Recent content in compilers on</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 07 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://stephenverderame.github.io/tags/compilers/index.xml" rel="self" type="application/rss+xml"/><item><title>Not Now Null Pointers: LLVM Null Analysis</title><link>https://stephenverderame.github.io/blog/null-check/</link><pubDate>Sat, 07 Oct 2023 00:00:00 +0000</pubDate><guid>https://stephenverderame.github.io/blog/null-check/</guid><description>I&amp;rsquo;ve always been interested in being able to make guarantees about the correctness of a program without the high cost of doing something like a full-on verification in an automatic theorem prover such as Coq. Moreover, avoiding extra runtime costs would be extremely nice as well, especially for systems programming domains.
I recently began working on an LLVM pass which aims to guarantee the absence of loading and storing of null pointers.</description></item></channel></rss>